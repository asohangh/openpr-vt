// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
// the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along with this program.  If
// not, see <http://www.gnu.org/licenses/>.

#include"openpr/bitstream/v5_devices.h"
namespace openpr
{
namespace bitstream
{

const string xc5vfx70t::xc5vfx70t_name = "XC5VFX70T";
const int
 xc5vfx70t::xc5vfx70t_id = 0x32C6093;
const tile_types
 xc5vfx70t::xc5vfx70t_row_layout[57] = {
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    IOB,
    GCLK,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    TRANSCV,
};

const string xc5vlx50::xc5vlx50_name = "XC5VLX50";
const int
 xc5vlx50::xc5vlx50_id = 0x2896093;
const tile_types
 xc5vlx50::xc5vlx50_row_layout[39] = {
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    IOB,
    GCLK,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
};

const string xc5vlx50t::xc5vlx50t_name = "XC5VLX50T";
const int
 xc5vlx50t::xc5vlx50t_id = 0x02A96093;
const tile_types
 xc5vlx50t::xc5vlx50t_row_layout[42] = {
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    IOB,
    GCLK,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
		TRANSCV,
};

const string xc5vsx95t::xc5vsx95t_name = "xc5vsx95t";
const int
 xc5vsx95t::xc5vsx95t_id = 0x02ece093;
const tile_types
 xc5vsx95t::xc5vsx95t_row_layout[77] = {
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    IOB,
    GCLK,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
		TRANSCV,
 };

const string xc5vlx110t::xc5vlx110t_name = "XC5VLX110T";
const int
 xc5vlx110t::xc5vlx110t_id = 0x2AD6093;
const tile_types
 xc5vlx110t::xc5vlx110t_row_layout[70] = {
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    DSP48,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    IOB,
    GCLK,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    CLB,
    CLB,
    CLB,
    CLB,
    IOB,
    CLB,
    CLB,
    CLB,
    CLB,
    BRAM_INT,
    BRAM,
    TRANSCV,
};
}
}
